[
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_four_digit_number_that_is_an_armstrong_number",
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_four_digit_number_that_is_not_an_armstrong_number",
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_seven_digit_number_that_is_an_armstrong_number",
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_seven_digit_number_that_is_not_an_armstrong_number",
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_single_digit_numbers_are_armstrong_numbers",
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_there_are_no_2_digit_armstrong_numbers",
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_three_digit_number_that_is_an_armstrong_number",
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_three_digit_number_that_is_not_an_armstrong_number",
  "python/armstrong-numbers/armstrong_numbers_test.py::ArmstrongNumbersTest::test_zero_is_an_armstrong_number",
  "python/hamming/hamming_test.py::HammingTest::test_disallow_first_strand_longer",
  "python/hamming/hamming_test.py::HammingTest::test_disallow_left_empty_strand",
  "python/hamming/hamming_test.py::HammingTest::test_disallow_right_empty_strand",
  "python/hamming/hamming_test.py::HammingTest::test_disallow_second_strand_longer",
  "python/hamming/hamming_test.py::HammingTest::test_empty_strands",
  "python/hamming/hamming_test.py::HammingTest::test_long_different_strands",
  "python/hamming/hamming_test.py::HammingTest::test_long_identical_strands",
  "python/hamming/hamming_test.py::HammingTest::test_single_letter_different_strands",
  "python/hamming/hamming_test.py::HammingTest::test_single_letter_identical_strands",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_check_digit_is_a_character_other_than_x",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_check_digit_of_x_should_not_be_used_for_0",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_empty_isbn",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_input_is_9_characters",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_input_is_too_long_but_contains_a_valid_isbn",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_character_in_isbn",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_characters_are_not_ignored",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_invalid_isbn_check_digit",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_isbn_without_check_digit",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_isbn_without_check_digit_and_dashes",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_isbn_without_separating_dashes_and_x_as_check_digit",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_too_long_isbn_and_no_dashes",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_too_short_isbn",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_valid_isbn_number",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_valid_isbn_number_with_a_check_digit_of_10",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_valid_isbn_without_separating_dashes",
  "python/isbn-verifier/isbn_verifier_test.py::IsbnVerifierTest::test_x_is_only_valid_as_a_check_digit",
  "python/isogram/isogram_test.py::IsogramTest::test_duplicated_character_in_the_middle",
  "python/isogram/isogram_test.py::IsogramTest::test_empty_string",
  "python/isogram/isogram_test.py::IsogramTest::test_hypothetical_isogrammic_word_with_hyphen",
  "python/isogram/isogram_test.py::IsogramTest::test_hypothetical_word_with_duplicated_character_following_hyphen",
  "python/isogram/isogram_test.py::IsogramTest::test_isogram_with_duplicated_hyphen",
  "python/isogram/isogram_test.py::IsogramTest::test_isogram_with_only_lower_case_characters",
  "python/isogram/isogram_test.py::IsogramTest::test_longest_reported_english_isogram",
  "python/isogram/isogram_test.py::IsogramTest::test_made_up_name_that_is_an_isogram",
  "python/isogram/isogram_test.py::IsogramTest::test_same_first_and_last_characters",
  "python/isogram/isogram_test.py::IsogramTest::test_word_with_duplicated_character_in_mixed_case",
  "python/isogram/isogram_test.py::IsogramTest::test_word_with_duplicated_character_in_mixed_case_lowercase_first",
  "python/isogram/isogram_test.py::IsogramTest::test_word_with_one_duplicated_character",
  "python/isogram/isogram_test.py::IsogramTest::test_word_with_one_duplicated_character_from_the_end_of_the_alphabet",
  "python/matrix/matrix_test.py::MatrixTest::test_can_extract_column",
  "python/matrix/matrix_test.py::MatrixTest::test_can_extract_column_from_non_square_matrix_with_no_corresponding_row",
  "python/matrix/matrix_test.py::MatrixTest::test_can_extract_row",
  "python/matrix/matrix_test.py::MatrixTest::test_can_extract_row_from_non_square_matrix_with_no_corresponding_column",
  "python/matrix/matrix_test.py::MatrixTest::test_extract_column_from_one_number_matrix",
  "python/matrix/matrix_test.py::MatrixTest::test_extract_column_where_numbers_have_different_widths",
  "python/matrix/matrix_test.py::MatrixTest::test_extract_row_from_one_number_matrix",
  "python/matrix/matrix_test.py::MatrixTest::test_extract_row_where_numbers_have_different_widths",
  "python/pangram/pangram_test.py::PangramTest::test_case_insensitive",
  "python/pangram/pangram_test.py::PangramTest::test_empty_sentence",
  "python/pangram/pangram_test.py::PangramTest::test_missing_letters_replaced_by_numbers",
  "python/pangram/pangram_test.py::PangramTest::test_missing_the_letter_h",
  "python/pangram/pangram_test.py::PangramTest::test_missing_the_letter_x",
  "python/pangram/pangram_test.py::PangramTest::test_mixed_case_and_punctuation",
  "python/pangram/pangram_test.py::PangramTest::test_only_lower_case",
  "python/pangram/pangram_test.py::PangramTest::test_perfect_lower_case",
  "python/pangram/pangram_test.py::PangramTest::test_with_numbers",
  "python/pangram/pangram_test.py::PangramTest::test_with_underscores",
  "python/perfect-numbers/perfect_numbers_test.py::PerfectNumbersTest::test_large_perfect_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::PerfectNumbersTest::test_medium_perfect_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::PerfectNumbersTest::test_smallest_perfect_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::AbundantNumbersTest::test_large_abundant_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::AbundantNumbersTest::test_medium_abundant_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::AbundantNumbersTest::test_smallest_abundant_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::DeficientNumbersTest::test_edge_case_no_factors_other_than_itself_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::DeficientNumbersTest::test_large_deficient_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::DeficientNumbersTest::test_medium_deficient_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::DeficientNumbersTest::test_smallest_non_prime_deficient_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::DeficientNumbersTest::test_smallest_prime_deficient_number_is_classified_correctly",
  "python/perfect-numbers/perfect_numbers_test.py::InvalidInputsTest::test_negative_integer_is_rejected_not_a_natural_number",
  "python/perfect-numbers/perfect_numbers_test.py::InvalidInputsTest::test_zero_is_rejected_not_a_natural_number",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_area_code",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_cleans_numbers_with_dots",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_cleans_numbers_with_multiple_spaces",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_cleans_the_number",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_if_area_code_starts_with_0",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_if_area_code_starts_with_0_on_valid_11_digit_number",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_if_area_code_starts_with_1",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_if_area_code_starts_with_1_on_valid_11_digit_number",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_if_exchange_code_starts_with_0",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_if_exchange_code_starts_with_0_on_valid_11_digit_number",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_if_exchange_code_starts_with_1",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_if_exchange_code_starts_with_1_on_valid_11_digit_number",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_when_11_digits_does_not_start_with_a_1",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_when_9_digits",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_when_more_than_11_digits",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_with_letters",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_invalid_with_punctuations",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_pretty_print",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_pretty_print_with_full_us_phone_number",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_valid_when_11_digits_and_starting_with_1",
  "python/phone-number/phone_number_test.py::PhoneNumberTest::test_valid_when_11_digits_and_starting_with_1_even_with_punctuation",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_cysteine_rna_sequence_1",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_cysteine_rna_sequence_2",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_leucine_rna_sequence_1",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_leucine_rna_sequence_2",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_methionine_rna_sequence",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_phenylalanine_rna_sequence_1",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_phenylalanine_rna_sequence_2",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_serine_rna_sequence_1",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_serine_rna_sequence_2",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_serine_rna_sequence_3",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_serine_rna_sequence_4",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_stop_codon_rna_sequence_1",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_stop_codon_rna_sequence_2",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_stop_codon_rna_sequence_3",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_translate_rna_strand_into_correct_protein_list",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_translation_stops_if_stop_codon_at_beginning_of_sequence",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_translation_stops_if_stop_codon_at_end_of_three_codon_sequence",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_translation_stops_if_stop_codon_at_end_of_two_codon_sequence",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_translation_stops_if_stop_codon_in_middle_of_six_codon_sequence",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_translation_stops_if_stop_codon_in_middle_of_three_codon_sequence",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_tryptophan_rna_sequence",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_tyrosine_rna_sequence_1",
  "python/protein-translation/protein_translation_test.py::ProteinTranslationTest::test_tyrosine_rna_sequence_2",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_2_to_the_power_3_does_not_make_a_raindrop_sound_as_3_is_the_exponent_not_the_base",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_105_is_pling_plang_plong_as_it_has_factors_3_5_and_7",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_10_is_plang_as_it_has_a_factor_5",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_14_is_plong_as_it_has_a_factor_of_7",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_15_is_pling_plang_as_it_has_factors_3_and_5",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_1_is_1",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_21_is_pling_plong_as_it_has_factors_3_and_7",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_25_is_plang_as_it_has_a_factor_5",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_27_is_pling_as_it_has_a_factor_3",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_3125_is_plang_as_it_has_a_factor_5",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_35_is_plang_plong_as_it_has_factors_5_and_7",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_3_is_pling",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_49_is_plong_as_it_has_a_factor_7",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_52_is_52",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_5_is_plang",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_6_is_pling_as_it_has_a_factor_3",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_7_is_plong",
  "python/raindrops/raindrops_test.py::RaindropsTest::test_the_sound_for_9_is_pling_as_it_has_a_factor_3",
  "python/robot-name/robot_name_test.py::RobotNameTest::test_different_robots_have_different_names",
  "python/robot-name/robot_name_test.py::RobotNameTest::test_has_name",
  "python/robot-name/robot_name_test.py::RobotNameTest::test_name_sticks",
  "python/robot-name/robot_name_test.py::RobotNameTest::test_reset_name",
  "python/series/series_test.py::SeriesTest::test_empty_series_is_invalid",
  "python/series/series_test.py::SeriesTest::test_slice_length_cannot_be_negative",
  "python/series/series_test.py::SeriesTest::test_slice_length_cannot_be_zero",
  "python/series/series_test.py::SeriesTest::test_slice_length_is_too_large",
  "python/series/series_test.py::SeriesTest::test_slices_can_include_duplicates",
  "python/series/series_test.py::SeriesTest::test_slices_of_a_long_series",
  "python/series/series_test.py::SeriesTest::test_slices_of_one_from_one",
  "python/series/series_test.py::SeriesTest::test_slices_of_one_from_two",
  "python/series/series_test.py::SeriesTest::test_slices_of_two",
  "python/series/series_test.py::SeriesTest::test_slices_of_two_overlap"
]